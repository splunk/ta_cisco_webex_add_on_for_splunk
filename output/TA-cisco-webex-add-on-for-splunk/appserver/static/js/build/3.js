(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{409:function(e,t,n){e.exports=function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=121)}({0:function(e,t){e.exports=n(4)},1:function(e,t){e.exports=n(2)},10:function(e,t){e.exports=n(56)},11:function(e,t){e.exports=n(37)},12:function(e,t,n){"use strict";function a(e,t){e&&("function"==typeof e?e(t):e.current=t)}n.d(t,"a",(function(){return a}))},121:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return W})),n.d(t,"Tab",(function(){return M}));var a=n(2),r=n.n(a),i=n(1),o=n.n(i),c=n(3),l=n.n(c),s=n(0),p=l.a.div.withConfig({displayName:"TabBarStyles__Styled",componentId:"sc-1t85fen-0"})([""," position:relative;&::before{content:'';display:block;position:absolute;left:0;top:0;right:0;bottom:0;border:0 solid ",";}",";"],s.mixins.reset("flex"),Object(s.pick)({enterprise:s.variables.borderLightColor,prisma:s.variables.neutral200}),Object(s.pickVariant)("$layout",{horizontal:{prisma:Object(s.pickVariant)("$withUnderline",{true:Object(c.css)(["&::before{border-bottom-width:1px;}"])}),enterprise:Object(c.css)(["&::before{border-bottom-width:1px;}"])},vertical:{enterprise:Object(c.css)(["display:inline-block;&::before{border-right-width:1px;}"]),prisma:Object(c.css)(["&::before{border-bottom-width:1px;}"])}})),b=n(10),u=n(18),d=n.n(u),f=n(14),m=n.n(f),h=n(11),v=n.n(h),y=l()(v.a).withConfig({displayName:"TabStyles__StyledClickable",componentId:"sc-1ry8mzj-0"})(["flex:0 1 auto;display:block;position:relative;line-height:",";text-align:center;white-space:nowrap;color:",";",";&[aria-selected='true']{cursor:default;","}&[aria-selected='false']{box-shadow:none;font-weight:",";"," &:focus{box-shadow:",";","}&:hover:not([disabled]){","}}"],Object(s.pick)({enterprise:"24px",prisma:"20px"}),s.variables.contentColorDefault,Object(s.pickVariant)("$layout",{horizontal:Object(c.css)(["padding:",";margin-bottom:1px;"],Object(s.pick)({enterprise:"3px 20px",prisma:{comfortable:"0 20px",compact:"0 16px"}})),vertical:{enterprise:Object(c.css)(["width:100%;text-align:left;right:1px;padding:10px 20px;",""],(function(e){return e.$icon&&Object(c.css)(["text-align:center;"])})),prisma:Object(c.css)(["padding:",";margin-bottom:1px;"],Object(s.pick)({enterprise:"3px 20px",prisma:{comfortable:"0 20px",compact:"0 16px"}}))}}),Object(s.pick)({prisma:Object(c.css)(["color:",";font-weight:",";"],s.variables.contentColorActive,s.variables.fontWeightSemiBold)}),Object(s.pick)({enterprise:"normal",prisma:s.variables.fontWeightSemiBold}),Object(s.pick)({prisma:Object(c.css)(["&::after{display:block;content:attr(title);font-weight:",";height:0;color:transparent;overflow:hidden;visibility:hidden;}"],s.variables.fontWeightSemiBold)}),s.variables.focusShadowInset,Object(s.pick)({prisma:Object(c.css)(["color:",";"],s.variables.contentColorActive)}),Object(s.pick)({prisma:Object(c.css)(["color:",";"],s.variables.contentColorActive)})),O=l.a.div.withConfig({displayName:"TabStyles__StyledUnderline",componentId:"sc-1ry8mzj-1"})(["position:absolute;"," ",";[aria-selected='true'] > &{background-color:",";",";}",":hover:not([disabled]) > &{",";}"],Object(s.pick)({enterprise:Object(c.css)(["background:",";"],s.variables.borderLightColor)}),Object(s.pickVariant)("$layout",{horizontal:Object(c.css)(["height:0;box-sizing:border-box;width:",";"," transition:height 0.2s;"],Object(s.pick)({enterprise:Object(c.css)(["calc(100% - 20px * 2)"]),prisma:{comfortable:Object(c.css)(["calc(100% - 20px * 2)"]),compact:Object(c.css)(["calc(100% - 16px * 2)"])}}),Object(s.pick)({enterprise:Object(c.css)(["bottom:-1px;"])})),vertical:{enterprise:Object(c.css)(["width:0;height:calc(100% - 10px * 2);top:10px;right:-1px;transition:width 0.2s;"]),prisma:Object(c.css)(["height:0;box-sizing:border-box;width:",";transition:height 0.2s;"],Object(s.pick)({comfortable:Object(c.css)(["calc(100% - 20px * 2)"]),compact:Object(c.css)(["calc(100% - 16px * 2)"])}))}}),Object(s.pick)({enterprise:s.variables.accentColor,prisma:s.variables.contentColorActive}),Object(s.pickVariant)("$layout",{horizontal:{enterprise:Object(c.css)(["height:3px;"]),prisma:Object(s.pickVariant)("$withUnderline",{true:Object(c.css)(["height:1px;"])})},vertical:{enterprise:Object(c.css)(["width:3px;"]),prisma:Object(c.css)(["height:1px;"])}}),y,Object(s.pickVariant)("$layout",{horizontal:{enterprise:Object(c.css)(["height:3px;"])},vertical:{enterprise:Object(c.css)(["width:3px;"])}})),g=l.a.span.withConfig({displayName:"TabStyles__StyledIcon",componentId:"sc-1ry8mzj-2"})(["",";"],Object(s.pickVariant)("$iconSize",{inline:Object(c.css)([""," text-align:left;padding-right:",";> svg{transform:translateY(-1px);}"],Object(s.pick)({prisma:Object(c.css)(["display:inline-block;width:16px;height:16px;"])}),Object(s.pick)({enterprise:"0.4em",prisma:"8px"})),small:Object(c.css)(["font-size:24px;height:24px;text-align:center;display:block;padding:4px 0;"]),large:Object(c.css)(["font-size:48px;height:48px;text-align:center;display:block;padding:8px 0 0;"])})),j=l.a.div.withConfig({displayName:"TabStyles__StyledLabel",componentId:"sc-1ry8mzj-3"})(["overflow:hidden;text-overflow:ellipsis;min-width:10px;margin:",";"],Object(s.pick)({enterprise:"0",prisma:{comfortable:"16px 0",compact:"10px 0"}})),x=l.a.div.withConfig({displayName:"TabStyles__StyledCount",componentId:"sc-1ry8mzj-4"})([""," display:inline-block;background:",";border-radius:18px;color:",";font-size:",";line-height:10px;padding:4px 6px;margin-left:",";"," &[disabled]{background:",";color:",";}"],s.mixins.reset("inlne-block"),s.variables.interactiveColorBackground,s.variables.contentColorDefault,Object(s.pick)({enterprise:"inherit",prisma:"10px"}),Object(s.pick)({enterprise:"0",prisma:"8px"}),Object(s.pick)({enterprise:Object(c.css)(["&::before{content:'(';}&::after{content:')';}"])}),s.variables.interactiveColorBackgroundDisabled,s.variables.contentColorDisabled),k=l.a.div.withConfig({displayName:"TabStyles__StyledTooltipContent",componentId:"sc-1ry8mzj-5"})(["padding:8px;font-size:",";"],s.variables.fontSizeSmall),w=n(12);function S(e){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(){return(C=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function E(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function T(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _(e,t){return(_=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function z(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=P(e);if(t){var r=P(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return I(this,n)}}function I(e,t){return!t||"object"!==S(t)&&"function"!=typeof t?R(e):t}function R(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function N(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var $={active:o.a.bool,appearance:o.a.oneOf(["navigation","context"]),ariaControls:o.a.string,count:o.a.number,disabled:o.a.bool,elementRef:o.a.oneOfType([o.a.func,o.a.object]),icon:o.a.node,iconSize:o.a.oneOf(["inline","small","large"]),id:o.a.string,label:o.a.oneOfType([o.a.string,o.a.element]),layout:o.a.oneOf(["horizontal","vertical"]),onClick:o.a.func,tabId:o.a.string,tooltip:o.a.node},D=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_(e,t)}(o,e);var t,n,a,i=z(o);function o(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),N(R(t=i.call(this,e)),"popoverId",void 0),N(R(t),"handleMount",(function(e){t.setState({anchor:e}),Object(w.a)(t.props.elementRef,e)})),N(R(t),"handleTooltipOpen",(function(){t.setState({open:!0})})),N(R(t),"handleTooltipClose",(function(){t.setState({open:!1})})),N(R(t),"handleClick",(function(e){var n=t.props,a=n.onClick,r=n.tabId;null==a||a(e,{tabId:r}),e.preventDefault()})),t.popoverId=Object(b.createDOMID)("popover"),t.state={open:!1,anchor:null},t}return t=o,(n=[{key:"render",value:function(){var e=this.props,t=e.active,n=e.appearance,a=e.ariaControls,i=e.count,o=e.disabled,c=e.icon,l=e.iconSize,s=e.label,p=e.layout,b=e.tabId,u=e.tooltip,f=E(e,["active","appearance","ariaControls","count","disabled","icon","iconSize","label","layout","tabId","tooltip"]),h=this.state,v=h.anchor,w=h.open;return r.a.createElement(y,C({"aria-controls":a,"aria-selected":t,"data-test":"tab","data-test-tab-id":b,"data-test-popover-id":u?this.popoverId:void 0,$layout:p,$icon:!(!c||"inline"===l)||void 0,disabled:o,elementRef:this.handleMount},f,{onClick:t?void 0:this.handleClick,onFocus:this.handleTooltipOpen,onMouseEnter:this.handleTooltipOpen,onBlur:this.handleTooltipClose,onMouseLeave:this.handleTooltipClose,role:"tab",tabIndex:t?-1:void 0,title:s}),r.a.createElement(j,{"data-test":"label",$withUnderline:"navigation"===n},c&&r.a.createElement(g,{$iconSize:l},c),s,(0===i||i)&&r.a.createElement(x,{"data-test":"count",disabled:o},i)),r.a.createElement(O,{$layout:p,$withUnderline:"navigation"===n}),!o&&u&&r.a.createElement(d.a,{anchor:v,appearance:"inverted",closeReasons:[],defaultPlacement:"vertical"===p?"right":"above",id:this.popoverId,open:!!v&&w},r.a.createElement(k,null,u)),u&&r.a.createElement(m.a,null,u))}}])&&T(t.prototype,n),a&&T(t,a),o}(a.Component);N(D,"propTypes",$),N(D,"defaultProps",{active:!1,layout:"horizontal",iconSize:"inline",disabled:!1});var M=D;function V(){return(V=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function B(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var A={activeTabId:o.a.string,appearance:o.a.oneOf(["navigation","context"]),children:o.a.node,disabled:o.a.bool,elementRef:o.a.oneOfType([o.a.func,o.a.object]),iconSize:o.a.oneOf(["inline","small","large"]),layout:o.a.oneOf(["horizontal","vertical"]),onChange:o.a.func,tabWidth:o.a.number};function U(e){var t=e.activeTabId,n=e.appearance,i=void 0===n?"navigation":n,o=e.children,c=e.disabled,l=void 0!==c&&c,s=e.elementRef,b=e.iconSize,u=void 0===b?"inline":b,d=e.layout,f=void 0===d?"horizontal":d,m=e.onChange,h=e.tabWidth,v=B(e,["activeTabId","appearance","children","disabled","elementRef","iconSize","layout","onChange","tabWidth"]),y=a.Children.toArray(o).filter(a.isValidElement).map((function(e){return Object(a.cloneElement)(e,{active:t===e.props.tabId,appearance:i,disabled:l||e.props.disabled,iconSize:u,layout:f,onClick:function(e,t){null==m||m(e,{selectedTabId:t.tabId})},style:h&&h>50?{width:h}:e.props.style})}));return r.a.createElement(p,V({"data-tab-layout":f,"data-test-active-tab-id":t,"data-test":"tab-bar",role:"tablist",ref:s,$layout:f,$withUnderline:"navigation"===i},v),y)}U.propTypes=A,U.Tab=M;var W=U},14:function(e,t){e.exports=n(59)},18:function(e,t){e.exports=n(109)},2:function(e,t){e.exports=n(0)},3:function(e,t){e.exports=n(1)}})},414:function(e,t,n){"use strict";n.r(t);var a,r=n(57),i=n.n(r),o=n(13),c=n.n(o),l=n(0),s=n.n(l),p=n(7),b=n(409),u=n.n(b),d=n(238),f=n.n(d),m=n(1),h=n(255),v=n(36),y=n(251),O=n(288),g=n(2),j=n.n(g),x=n(27),k=n.n(x),w=n(61),S=n.n(w),C=n(259),E=n(231),T=n(230),_=n(62),z=n(39),I=m.default.div(a||(a=c()(["\n    margin-left: 270px !important;\n    width: 150px;\n\n    .save_btn {\n        width: 100%;\n    }\n"])));function R(e){var t=e.serviceName,n=Object(l.useRef)(),a=Object(l.useState)(null),r=i()(a,2),o=r[0],c=r[1],b=Object(l.useState)(!1),u=i()(b,2),d=u[0],f=u[1],m=Object(l.useState)({}),h=i()(m,2),v=h[0],y=h[1];Object(l.useEffect)((function(){Object(E.a)({serviceName:"settings/".concat(t),handleError:!0,callbackOnError:function(e){e.uccErrorCode="ERR0005",c(e)}}).then((function(e){y(e.data.entry[0].content)}))}),[t]);if(null!=o&&o.uccErrorCode)throw o;return Object.keys(v).length?s.a.createElement(s.a.Fragment,null,s.a.createElement(C.a,{ref:n,page:z.a,stanzaName:t,serviceName:"settings",mode:T.b,currentServiceState:v,handleFormSubmit:function(e){f(e)}}),s.a.createElement(I,null,s.a.createElement(k.a,{className:"saveBtn",appearance:"primary",label:d?s.a.createElement(S.a,null):Object(p._)("Save"),onClick:function(){n.current.handleSubmit()},disabled:d}))):s.a.createElement(_.d,null)}R.propTypes={serviceName:j.a.string.isRequired};var P=R,N=n(279),$=n.n(N),D=n(229),M=n(287),V=n(256);function B(e){var t=e.serviceName,n=e.serviceTitle,a=Object(l.useState)(!1),r=i()(a,2),o=r[0],c=r[1],p="Add ".concat(n),b=function(){c(!1)};return s.a.createElement(s.a.Fragment,null,s.a.createElement(D.a,{value:null},s.a.createElement(M.a,{page:z.a,serviceName:t,handleRequestModalOpen:function(){c(!0)}}),s.a.createElement($.a,{position:"top-right"}),o?s.a.createElement(V.a,{page:z.a,open:o,handleRequestClose:b,handleSaveData:function(){},serviceName:t,mode:T.c,formLabel:p}):null))}B.propTypes={serviceName:j.a.string.isRequired,serviceTitle:j.a.string.isRequired};var A,U=Object(l.memo)(B),W=Object(m.default)(f.a.Row)(A||(A=c()(["\n    padding: 5px 0px;\n\n    .dropdown {\n        text-align: right;\n    }\n\n    .input_button {\n        text-align: right;\n        margin-right: 0px;\n    }\n"])));t.default=function(){var e=Object(v.d)().pages.configuration,t=e.title,n=e.description,a=e.tabs,r=a.map((function(e){return e.name})),o=Object(l.useState)(a[0].name),c=i()(o,2),b=c[0],d=c[1],m=Object(h.a)();Object(l.useEffect)((function(){m&&r.includes(m.get("tab"))&&m.get("tab")!==b&&d(m.get("tab"))}),[]);var g=Object(l.useCallback)((function(e,t){var n=t.selectedTabId;d(n)}),[b]);return s.a.createElement(O.a,null,s.a.createElement(f.a,{gutter:8},s.a.createElement(W,null,s.a.createElement(f.a.Column,{span:9},s.a.createElement(y.b,null,Object(p._)(t)),s.a.createElement(y.a,null,Object(p._)(n))))),s.a.createElement(u.a,{activeTabId:b,onChange:g},a.map((function(e){return s.a.createElement(u.a.Tab,{key:e.name,label:Object(p._)(e.title),tabId:e.name})}))),a.map((function(e){return e.table?s.a.createElement("div",{key:e.name,style:e.name!==b?{display:"none"}:{display:"block"},id:"".concat(e.name,"Tab")},s.a.createElement(U,{key:e.name,serviceName:e.name,serviceTitle:e.title})):s.a.createElement("div",{key:e.name,style:e.name!==b?{display:"none"}:{display:"block"},id:"".concat(e.name,"Tab")},s.a.createElement(P,{key:e.name,serviceName:e.name}))})))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
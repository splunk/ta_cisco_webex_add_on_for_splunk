name: Build and Run AppInspect

on:
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize]
    paths:
      - 'package/**'

# Allow only 1 concurrent execution
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Bundle the App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9 ]
    outputs:
      artifact_name: ${{ steps.artifact.outputs.name }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade splunk-packaging-toolkit splunk-add-on-ucc-framework

      - name: Get App Info
        id: app
        run: |
          MANIFEST="app.manifest"
          if [ -f "$MANIFEST" ]; then
            app_id=$(cat "$MANIFEST" | jq -r '.info.id.name')
            app_version=$(cat "$MANIFEST" | jq -r '.info.id.version')
            echo "name=${app_id}" >> $GITHUB_OUTPUT
            echo "version=${app_version}" >> $GITHUB_OUTPUT
          else
            echo "Files Not Found ❌ Please add 'package/app.manifest'"
            exit 1
          fi
        working-directory: ./package

      - name: Build and bundle TA
        run: |
          ucc-gen build --ta-version ${{ steps.app.outputs.version }}
          chmod -R +r output
          chmod -R go-w output
          ucc-gen package --path output/${{ steps.app.outputs.name }}
        shell: bash
      - id: artifact
        run: |
          echo "name=${{ steps.app.outputs.name }}-${{ steps.app.outputs.version }}-py${{ matrix.python-version }}" >> $GITHUB_OUTPUT

      - name: Slim Validate
        run: |
          slim validate ${{ steps.app.outputs.name }}*.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.name }}
          path: ${{ steps.app.outputs.name }}*.tar.gz

  appinspect-cli:
    name: appinspect-cli ${{ matrix.tags }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        tags:
          - "cloud"
          - "private_app"
          - "private_classic"
          - "private_victoria"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }}
          path: dist
      - uses: splunk/appinspect-cli-action@v2.10
        with:
          app_path: dist
          included_tags: ${{ matrix.tags }}
      - uses: actions/upload-artifact@v4
        with:
          name: appinspect_result_${{ matrix.tags }}
          path: appinspect_result.json
